name: Validate Example Configurations

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'examples/**'
      - 'controller_utils/**'
      - 'generation_utils/**'
  pull_request:
    paths:
      - 'examples/**'
      - 'controller_utils/**'
      - 'generation_utils/**'

jobs:
  discover-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout config-checker
      uses: actions/checkout@v4
      with:
        repository: precice-forschungsprojekt/config-checker
        path: config-checker

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        cd config-checker
        pip install -r requirements.txt

    - name: Discover examples
      id: find-examples
      run: |
        # Find all example directories containing precice-config.xml
        EXAMPLES=$(find examples -name "precice-config.xml" -exec dirname {} \; | sort | uniq)
        # Convert to JSON array for GitHub Actions output
        EXAMPLES_JSON=$(echo "$EXAMPLES" | jq -R -s -c 'split("\n") | map(select(. != ""))')
        echo "examples=$EXAMPLES_JSON" >> $GITHUB_OUTPUT
        echo "Found examples: $EXAMPLES_JSON"

    - name: Generate and validate configurations
      env:
        EXAMPLE: ${{ matrix.example }}
      run: |
        echo "Processing example: ${{ matrix.example }}"
        
        # Create output directory
        OUTPUT_DIR="generated_configs/$(basename ${{ matrix.example }})"
        mkdir -p $OUTPUT_DIR
        
        # Find input YAML file (assuming same name as directory)
        EXAMPLE_NAME=$(basename ${{ matrix.example }})
        INPUT_YAML="${{ matrix.example }}/$EXAMPLE_NAME.yaml"
        
        # Run precice-gen if input YAML exists
        if [ -f "$INPUT_YAML" ]; then
          echo "Generating from $INPUT_YAML"
          precice-gen "$INPUT_YAML" --output "$OUTPUT_DIR"
        else
          echo "Using existing precice-config.xml"
          cp "${{ matrix.example }}/precice-config.xml" "$OUTPUT_DIR/"
        fi
        
        # Validate the configuration
        cd config-checker
        python -m pytest \
          --tb=short \
          --color=yes \
          "../$OUTPUT_DIR/precice-config.xml"

    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: validation-results
        path: generated_configs/**
        retention-days: 7